name: websec build-n-ship

on:
  push:
    branches:
      - master

jobs:
  build-n-ship:
    name: Build & Ship Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'false'  # Deshabilita el caché de JDK para asegurarse de que se use la última versión
          server-id: github
          server-username: ${{ github.actor }}
          server-password: ${{ secrets.GITHUB_TOKEN }}
          overwrite-settings: true

      - name: Install SonarQube Scanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner-cli-4.6.2.2472-linux.zip -d $HOME
          export PATH=$HOME/sonar-scanner-4.6.2.2472-linux/bin:$PATH
          export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          JAVA_HOME: ${{ env.JAVA_HOME }}  # Asegura que JAVA_HOME esté configurado correctamente
        run: |
          $HOME/sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner \
          -Dsonar.projectKey=${{ secrets.HAPPNAME }} \
          -Dsonar.sources=. \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Login to HCR
        run: |
          docker login --username=_ --password=${{ secrets.HTOK }} registry.heroku.com

      - name: Build Docker image & add Heroku tag
        run: |
          docker build --no-cache --platform linux/amd64 -t registry.heroku.com/${{ secrets.HAPPNAME }}/web .

      - name: Push Docker image to HCR
        ru
