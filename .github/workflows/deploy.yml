on:
  push:
    branches:
      - master

jobs:
  build_and_analyze:
    runs-on: ubuntu-latest
    name: Build, analyze with SonarQube, deploy to Heroku, and scan with OWASP ZAP
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Heroku Container Registry
        run: |
          echo ${{ secrets.HTOK }} | docker login --username=_ --password-stdin registry.heroku.com

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=mngf87
            -Dsonar.projectKey=Mngf87_vulnerable-web-app

      - name: Build Docker image & add Heroku tag
        run: |
          docker buildx build --platform linux/amd64 -t registry.heroku.com/${{ secrets.HAPPNAME }}/web --push --build-arg BUILDKIT_INLINE_CACHE=1 --build-arg DOCKER_BUILDKIT=1 .

      - name: Push Docker image to Heroku Container Registry
        run: |
          docker push registry.heroku.com/${{ secrets.HAPPNAME }}/web
      
      - name: Deploy new image on Heroku app
        run: |
          heroku container:release web --app ${{ secrets.HAPPNAME }}

      - name: OWASP ZAP Scan
        uses: zaproxy/action-api-scan@v0.7.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          format: openapi
          target: 'https://ekoparty-mgarciaferro-352282513fcb.herokuapp.com/'
          cmd_options: '-a'

      - name: Upload ZAP Report
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ZAP Report
          path: zap_report.html
